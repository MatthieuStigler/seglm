
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(seglm)
> 
> set.seed(123)
> data_thresh <- sim_thresh()
> X <-  as.matrix(data_thresh[, "x", drop = FALSE])
> y <-  as.matrix(data_thresh[, "y"])
> 
> ## 1 th
> seg_dyn_1 <- seglm_search_dynprog(X=X, y=y, th_var = X)
> seg_grd_1 <- seglm_search_grid(X=X, y=y, th_var = X)
> 
> seg_dyn_1_tr <- seglm_search_dynprog(X=X, y=y, th_var = X, trim = 0.1)
> seg_grd_1_tr <- seglm_search_grid(X=X, y=y, th_var = X, trim = 0.1)
> 
> seg_dyn_1
th: -0.0619117105767217 
SSR: NA 
> seg_grd_1
th: 0.0652930335253153 
SSR: 279.101158005311 
> 
> seg_dyn_1_tr
th: -0.0619117105767217 
SSR: NA 
> seg_grd_1_tr
th: 0.0652930335253153 
SSR: 279.101158005311 
> 
> ## 2 th
> seg_dyn_2 <- seglm_search_dynprog(X=X, y=y, th_var = X, nthresh = 2)
> seg_grd_2 <- seglm_search_grid(X=X, y=y, th_var = X, nthresh = 2)
> 
> seg_dyn_2
th: -0.235700359100477 th: 0.0652930335253153 
SSR: NA 
> seg_grd_2
th: -0.445661970099958 th: 0.0652930335253153 
SSR: 236.341878981821 
> 
> ## all in list
> seg_search_all <-  list(seg_dyn_1 = seg_dyn_1,
+                         seg_dyn_2 = seg_dyn_2,
+                         seg_dyn_1_tr = seg_dyn_1_tr,
+                         seg_grd_1 = seg_grd_1,
+                         seg_grd_2 = seg_grd_2,
+                         seg_grd_1_tr = seg_grd_1_tr)
> 
> 
> sapply(seg_search_all, deviance)
   seg_dyn_1    seg_dyn_2 seg_dyn_1_tr    seg_grd_1    seg_grd_2 seg_grd_1_tr 
          NA           NA           NA     279.1012     236.3419     279.1012 
> 
> ## trace
> seg_grid_2 <- seglm_search_grid(X=X, y=y, th_var = X, nthresh = 2, trace = TRUE)
Best for nthresh=1: 0.06529303 
Best for nthresh=2, given th =  0.06529303 : -0.445662 
Best for nthresh=2, iter 1 given th =  -0.445662 : 0.06529303 . Converged, exit iteration, 
> 
> ## fit
> seg_dyn_1_fit <- seglm_fit(X=X, y=y, th_val = seg_dyn_1$th, th_var = X)
> seg_grd_1_fit <- seglm_fit(X=X, y=y, th_val = seg_grd_1$th, th_var = X)
> 
> seg_dyn_2_fit <- seglm_fit(X=X, y=y, th_val = seg_dyn_2$th, th_var = X, nthresh = 2)
> seg_grd_2_fit <- seglm_fit(X=X, y=y, th_val = seg_grd_2$th, th_var = X, nthresh = 2)
> 
> seg_grd_1_fit

Call:
lm(formula = y ~ . - 1, data = as.data.frame(Xy_dat))

Coefficients:
 x_seg1   x_seg2  
-0.8662   1.8033  

> 
> seg_fit_all <-  list(seg_dyn_1_fit = seg_dyn_1_fit,
+                      seg_dyn_2_fit = seg_dyn_2_fit,
+                      seg_grd_1_fit = seg_grd_1_fit,
+                      seg_grd_2_fit = seg_grd_2_fit)
> 
> 
> sapply(seg_fit_all, print)

Call:
lm(formula = y ~ . - 1, data = as.data.frame(Xy_dat))

Coefficients:
 x_seg1   x_seg2  
-0.8639   1.8008  


Call:
lm(formula = y ~ . - 1, data = as.data.frame(Xy_dat))

Coefficients:
 x_seg1   x_seg2   x_seg3  
-0.8222  -9.8613   1.8033  


Call:
lm(formula = y ~ . - 1, data = as.data.frame(Xy_dat))

Coefficients:
 x_seg1   x_seg2  
-0.8662   1.8033  


Call:
lm(formula = y ~ . - 1, data = as.data.frame(Xy_dat))

Coefficients:
 x_seg1   x_seg2   x_seg3  
-0.7288  -4.6851   1.8033  

              seg_dyn_1_fit seg_dyn_2_fit seg_grd_1_fit seg_grd_2_fit
coefficients  Numeric,2     Numeric,3     Numeric,2     Numeric,3    
residuals     Numeric,200   Numeric,200   Numeric,200   Numeric,200  
effects       Numeric,200   Numeric,200   Numeric,200   Numeric,200  
rank          2             3             2             3            
fitted.values Numeric,200   Numeric,200   Numeric,200   Numeric,200  
assign        Integer,2     Integer,3     Integer,2     Integer,3    
qr            List,5        List,5        List,5        List,5       
df.residual   198           197           198           197          
xlevels       List,0        List,0        List,0        List,0       
call          Expression    Expression    Expression    Expression   
terms         Expression    Expression    Expression    Expression   
model         List,3        List,4        List,3        List,4       
th_val        -0.06191171   Numeric,2     0.06529303    Numeric,2    
nthresh       1             2             1             2            
> sapply(seg_fit_all, deviance)
seg_dyn_1_fit seg_dyn_2_fit seg_grd_1_fit seg_grd_2_fit 
     280.2408      246.8087      279.1012      236.3419 
> sapply(seg_fit_all, coef)
$seg_dyn_1_fit
    x_seg1     x_seg2 
-0.8639384  1.8007754 

$seg_dyn_2_fit
    x_seg1     x_seg2     x_seg3 
-0.8221864 -9.8612621  1.8032784 

$seg_grd_1_fit
    x_seg1     x_seg2 
-0.8662471  1.8032784 

$seg_grd_2_fit
    x_seg1     x_seg2     x_seg3 
-0.7288264 -4.6850816  1.8032784 

> sapply(seg_fit_all, function(x) coef(summary(x)))
$seg_dyn_1_fit
         Estimate Std. Error   t value     Pr(>|t|)
x_seg1 -0.8639384  0.1318137 -6.554238 4.738803e-10
x_seg2  1.8007754  0.1216916 14.797860 7.409070e-34

$seg_dyn_2_fit
         Estimate Std. Error   t value     Pr(>|t|)
x_seg1 -0.8221864  0.1243039 -6.614327 3.434685e-10
x_seg2 -9.8612621  1.7760691 -5.552296 9.039215e-08
x_seg3  1.8032784  0.1145034 15.748694 1.044224e-36

$seg_grd_1_fit
         Estimate Std. Error   t value     Pr(>|t|)
x_seg1 -0.8662471  0.1315299 -6.585931 3.979148e-10
x_seg2  1.8032784  0.1214561 14.847163 5.231779e-34

$seg_grd_2_fit
         Estimate Std. Error  t value     Pr(>|t|)
x_seg1 -0.7288264  0.1235067 -5.90111 1.553137e-08
x_seg2 -4.6850816  0.6510729 -7.19594 1.270186e-11
x_seg3  1.8032784  0.1120491 16.09365 9.369453e-38

> 
> proc.time()
   user  system elapsed 
  3.752   0.052   4.364 
